{"ast":null,"code":"var _jsxFileName = \"/Users/pepe/Desktop/authentication-project-react/auth-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationData = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationData);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem('token');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: storedExpirationData\n  };\n};\n\nexport const AuthConextProvider = ({\n  children\n}) => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthConextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthConextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthConextProvider\");","map":{"version":3,"sources":["/Users/pepe/Desktop/authentication-project-react/auth-project/src/store/auth-context.js"],"names":["createContext","useState","logoutTimer","AuthContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationData","remainingTime","removeItem","duration","AuthConextProvider","children","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,gBAAGH,aAAa,CAAC;AAC/BI,EAAAA,KAAK,EAAE,EADwB;AAE/BC,EAAAA,UAAU,EAAE,KAFmB;AAG/BC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAG,CAHU;AAI/BG,EAAAA,MAAM,EAAE,MAAM,CAAG;AAJc,CAAD,CAAjC;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AAChD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AAEA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;AAEA,SAAOI,iBAAP;AACF,CAPD;;AASA,MAAMC,mBAAmB,GAAG,MAAM;AAC/B,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AAEA,QAAME,aAAa,GAAGZ,sBAAsB,CAACW,oBAAD,CAA5C;;AAEA,MAAIC,aAAa,IAAI,KAArB,EAA4B;AACzBH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACA,WAAO,IAAP;AACF;;AAED,SAAO;AACJjB,IAAAA,KAAK,EAAEY,WADH;AAEJM,IAAAA,QAAQ,EAAEH;AAFN,GAAP;AAIF,CAfD;;AAiBA,OAAO,MAAMI,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,QAAMC,YAAY,GAAGR,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACd,KAAD,EAAQsB,QAAR,IAAoBzB,QAAQ,CAACwB,YAAD,CAAlC;AAEA,QAAME,cAAc,GAAG,CAAC,CAACvB,KAAzB;;AAEA,QAAMwB,aAAa,GAAG,MAAM;AACzBF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAT,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;;AAEA,QAAInB,WAAJ,EAAiB;AACd2B,MAAAA,YAAY,CAAC3B,WAAD,CAAZ;AACF;AACH,GAPD;;AASA,QAAM4B,YAAY,GAAG,CAAC1B,KAAD,EAAQK,cAAR,KAA2B;AAC7CiB,IAAAA,QAAQ,CAACtB,KAAD,CAAR;AACAa,IAAAA,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8B3B,KAA9B;AACAa,IAAAA,YAAY,CAACc,OAAb,CAAqB,gBAArB,EAAuCtB,cAAvC;AAEA,UAAMW,aAAa,GAAGZ,sBAAsB,CAACC,cAAD,CAA5C;AAEAP,IAAAA,WAAW,GAAG8B,UAAU,CAACJ,aAAD,EAAgBR,aAAhB,CAAxB;AACF,GARD;;AAUA,QAAMa,YAAY,GAAG;AAClB7B,IAAAA,KAAK,EAAEA,KADW;AAElBC,IAAAA,UAAU,EAAEsB,cAFM;AAGlBrB,IAAAA,KAAK,EAAEwB,YAHW;AAIlBvB,IAAAA,MAAM,EAAEqB;AAJU,GAArB;AAOA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,YAA7B;AAAA,cACIT;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAKF,CArCM;;GAAMD,kB;;KAAAA,kB;AAuCb,eAAepB,WAAf","sourcesContent":["import { createContext, useState } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = createContext({\n   token: '',\n   isLoggedIn: false,\n   login: (token) => { },\n   logout: () => { },\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n   const currentTime = new Date().getTime();\n   const adjExpirationTime = new Date(expirationTime).getTime();\n\n   const remainingDuration = adjExpirationTime - currentTime;\n\n   return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n   const storedToken = localStorage.getItem('token');\n   const storedExpirationData = localStorage.getItem('expirationTime');\n\n   const remainingTime = calculateRemainingTime(storedExpirationData);\n\n   if (remainingTime <= 60000) {\n      localStorage.removeItem('token');\n      return null;\n   }\n\n   return {\n      token: storedToken,\n      duration: storedExpirationData,\n   };\n};\n\nexport const AuthConextProvider = ({ children }) => {\n   const initialToken = localStorage.getItem('token');\n   const [token, setToken] = useState(initialToken);\n\n   const userIsLoggedIn = !!token;\n\n   const logoutHandler = () => {\n      setToken(null);\n      localStorage.removeItem('token');\n\n      if (logoutTimer) {\n         clearTimeout(logoutTimer);\n      }\n   };\n\n   const loginHandler = (token, expirationTime) => {\n      setToken(token);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationTime', expirationTime);\n\n      const remainingTime = calculateRemainingTime(expirationTime);\n\n      logoutTimer = setTimeout(logoutHandler, remainingTime);\n   };\n\n   const contextValue = {\n      token: token,\n      isLoggedIn: userIsLoggedIn,\n      login: loginHandler,\n      logout: logoutHandler\n   };\n\n   return (\n      <AuthContext.Provider value={contextValue}>\n         {children}\n      </AuthContext.Provider>\n   );\n};\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}