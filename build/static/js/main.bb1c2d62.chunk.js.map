{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthConextProvider","initialToken","children","tokenData","storedToken","localStorage","getItem","storedExpirationData","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","value","MainNavigation","useContext","className","classes","header","to","logo","onClick","Layout","props","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb1c2d62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2xGgc\",\"control\":\"ProfileForm_control__2YUZH\",\"action\":\"ProfileForm_action__opJ_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2lqQ1\",\"logo\":\"MainNavigation_logo__1TgMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__gQOnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__kwCvL\"};","import { createContext, useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = createContext({\n   token: '',\n   isLoggedIn: false,\n   login: (token) => { },\n   logout: () => { },\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n   const currentTime = new Date().getTime();\n   const adjExpirationTime = new Date(expirationTime).getTime();\n\n   const remainingDuration = adjExpirationTime - currentTime;\n\n   return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n   const storedToken = localStorage.getItem('token');\n   const storedExpirationData = localStorage.getItem('expirationTime');\n\n   const remainingTime = calculateRemainingTime(storedExpirationData);\n\n   if (remainingTime <= 60000) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('expirationTime');\n      return null;\n   }\n\n   return {\n      token: storedToken,\n      duration: remainingTime,\n   };\n};\n\nexport const AuthConextProvider = ({ children }) => {\n   const tokenData = retrieveStoredToken();\n   let initialToken;\n   if (tokenData) {\n      initialToken = tokenData.token;\n   }\n\n   const [token, setToken] = useState(initialToken);\n\n   const userIsLoggedIn = !!token;\n\n   const logoutHandler = useCallback(() => {\n      setToken(null);\n      localStorage.removeItem('token');\n      localStorage.removeItem('expirationTime');\n\n      if (logoutTimer) {\n         clearTimeout(logoutTimer);\n      }\n   }, []);\n\n   const loginHandler = (token, expirationTime) => {\n      setToken(token);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationTime', expirationTime);\n\n      const remainingTime = calculateRemainingTime(expirationTime);\n\n      logoutTimer = setTimeout(logoutHandler, remainingTime);\n   };\n\n   useEffect(() => {\n      if (tokenData) {\n         logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n      }\n   }, [tokenData, logoutHandler]);\n\n   const contextValue = {\n      token: token,\n      isLoggedIn: userIsLoggedIn,\n      login: loginHandler,\n      logout: logoutHandler\n   };\n\n   return (\n      <AuthContext.Provider value={contextValue}>\n         {children}\n      </AuthContext.Provider>\n   );\n};\n\nexport default AuthContext;","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './MainNavigation.module.css';\nimport AuthContext from '../../store/auth-context';\n\nconst MainNavigation = () => {\n  const { isLoggedIn, logout } = useContext(AuthContext);\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to='/profile'>Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logout}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const { token } = useContext(AuthContext);\n  const newPasswordInputRef = useRef();\n\n  const submitNewPasswordHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCZ31cxrhk2lcF-rD-R2-AT3CJJHICydiE', {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: token,\n        password: enteredNewPassword,\n        returnSecureToken: false,\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        history.replace('/');\n      });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitNewPasswordHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"7\" ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const { login } = useContext(AuthContext);\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCZ31cxrhk2lcF-rD-R2-AT3CJJHICydiE';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCZ31cxrhk2lcF-rD-R2-AT3CJJHICydiE';\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication failed!';\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then(data => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        login(data.idToken, expirationTime.toISOString());\n        history.replace('/');\n      })\n      .catch(err => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const { isLoggedIn } = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        {!isLoggedIn && (\n          <Route path='/auth'>\n            <AuthPage />\n          </Route>\n        )}\n        <Route path='/profile'>\n          {isLoggedIn && <UserProfile />}\n          {!isLoggedIn && <Redirect to='/auth' />}\n        </Route>\n        <Route path='*'>\n          <Redirect to='/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthConextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <AuthConextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthConextProvider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__MPw6W\",\"control\":\"AuthForm_control__2fVSU\",\"actions\":\"AuthForm_actions__1VNhY\",\"toggle\":\"AuthForm_toggle__21tnB\"};"],"sourceRoot":""}